(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))c(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&c(i)}).observe(document,{childList:!0,subtree:!0});function n(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function c(r){if(r.ep)return;r.ep=!0;const s=n(r);fetch(r.href,s)}})();const a=document.getElementById("board"),p=document.getElementById("new-game-btn"),d=document.querySelector(".user-form"),b=document.querySelector(".current-player"),u=d.firstElementChild,m=80,L=2e3;let o=null,l=null,f=0;const v=["banana","brownlab","corgi","goldenpuppy","greenpug","husky","kingcharles","sleepy","window","yawn"];d.addEventListener("submit",e=>{e.preventDefault(),u.value.length<2?console.log("Your name must be at least 2 characters."):(b.textContent=`Now playing: ${u.value}`,d.style.display="none",p.style.display="block",h())});p.addEventListener("click",()=>{a.removeEventListener("click",y),a.innerHTML="",o=null,l=null,f=0,h()});function h(){const e=E(v);for(let t=0;t<e.length;t++){const n=document.createElement("div");n.classList.add("card"),n.classList.add("flipped"),n.setAttribute("name",e[t]),n.setAttribute("data-matched",!1),n.innerHTML=`
        <img class="card__front" src="/images/dogs/${e[t]}.jpg" alt="card front">
        <img class="card__back" src="/images/cover.jpg" alt="card back">
    `,setTimeout(()=>{a.appendChild(n)},m*t),setTimeout(()=>{n.classList.remove("flipped")},m*t+L)}a.addEventListener("click",y)}function y(e){e.target.classList.contains("card__back")&&A(e.target.parentElement)}function A(e){console.log(e.getAttribute("name")),e.classList.add("flipped"),o?l=e:o=e,o&&l&&(o.getAttribute("name")===l.getAttribute("name")?(console.log("those cards match!"),o.setAttribute("data-matched",!0),l.setAttribute("data-matched",!0),o=null,l=null,w()):(console.log("those cards don't match"),setTimeout(()=>{o.classList.remove("flipped"),l.classList.remove("flipped"),o=null,l=null},1e3)),f++)}function w(){const e=document.querySelectorAll(".card");for(let t=0;t<e.length;t++)if(e[t].getAttribute("data-matched")!=="true"){console.log("keep up the good work!");return}setTimeout(()=>{alert(`Congrats ${u.value}! You matched all cards in ${f} turns.`)},500)}function E(e){const n=g(e).slice(0,8),c=[...n,...n];return g(c)}function g(e){return e.sort(()=>Math.random()-.5)}
